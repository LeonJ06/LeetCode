/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null)  
            return true;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode left;
        TreeNode right;
        
        if(root.left!=null){
            if(root.right==null)
                return false;
            else{
                stack.push(root.left);
                stack.push(root.right);
            }
        }else if(root.right!=null)      //left==null && right !=null
            return false;
        
        while(!stack.isEmpty()){
            right = stack.pop();
            left = stack.pop();
            
            if(right.val!=left.val)         //check value
                return false;
            
            //check L.Left and R.Right
            if(left.left!=null){
                if(right.right==null)       //left.left!= null, right,right==null
                    return false;
                else{
                    stack.push(left.left);
                    stack.push(right.right);
                }
            }else if(right.right!=null)
                     return false;
                     
            //check L.right and R.left
            if(left.right!=null){
                if(right.left==null)
                    return false;
                else{
                    stack.push(left.right);
                    stack.push(right.left);
                }
            }else if(right.left!=null)
                    return false;
        }
        return true;            
    }
}