/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 

class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<>();
        dfs(root, sum, res, new ArrayList<Integer>());
            return res;
    }
    
    private void dfs(TreeNode node, int rest, List<List<Integer>> res, List<Integer> temp){
        if(node == null)
            return;
        
        temp.add(node.val);
        rest -= node.val;
        
        if(node.left == null && node.right == null && rest == 0){
            res.add(new ArrayList<Integer>(temp));  //remember to new the temp, since that temp is call by reference
        }
        else{
            dfs(node.left, rest, res, temp);
            dfs(node.right, rest, res, temp);
        }
        
        //rest += node.val;
        temp.remove(temp.size()-1);
        
    }
}