/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<TreeNode>();                 //used to save node of next level
        List<List<Integer>> result = new ArrayList<List<Integer>>();        //store the final answer
        if(root==null)                                                      //empty case
            return result;
        
        queue.offer(root);                                                  //activate the while loop
        while(!queue.isEmpty()){
            int amount = queue.size();                                      //process a level at a time
            List<Integer> temp = new ArrayList<Integer>();                  //list for a level
            for(int i =0;i<amount;i++){                                     //save the children of nodes
                if(queue.peek().left!=null)
                    queue.offer(queue.peek().left);
                if(queue.peek().right!=null)
                    queue.offer(queue.peek().right);
                temp.add(queue.poll().val);
            }
            result.add(temp);
        }
        return result;
    }
}